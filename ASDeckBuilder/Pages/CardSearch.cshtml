@page
@model ASDeckBuilder.Pages.CardSearchModel

@{
    ViewData["Title"] = "CardSearch";
}

<script>
        $(document).ready(function () {
            function getCardDetails($this) {

                var id;
                var cardId = $this.getAttribute('data-card-search-card-id');

                $.ajax({
                    type: 'POST',
                    data: {id: cardId},
                    url: '/CardDetails', // <-- Where should this point?
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    dataType: "html"
                }).done(function (data) {
                    $('#cardDetails').replaceWith(data);
                })

    });




</script>

<div class="card text-center">
    <div class="card-header">
        <h5>Card Filters</h5>
    </div>
    <div id="cardsBody" class="card-body border-0">
        <div class="row no-gutters">
            @foreach (var item in Model.Card)
            {
                <div class="col col-4 col-sm-4 col-lg-3" data-card-search-card-id="@item.CardId" onclick="getCardDetails(this)">
                    <img class="cardImage" src="@("/img/cards/" + item.CardId + ".jpg")"/>
                </div>
            }
        </div>
    </div>
    <div class="card-footer text-muted">
        <div id="cardDetails">
            <h6 class="text-center">Please Select a Card.</h6>
        </div>
    </div>
</div>






<!--

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Card[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Card[0].Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Card[0].Text)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Card) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.CardId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.CardId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.CardId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
    -->

